{"ast":null,"code":"var _jsxFileName = \"/Users/jhonb/Documents/Reacjs/digiworld-1/src/components/pasajeros/Pasajeros.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Pasajeros extends Component {\n  constructor(props) {\n    super(props);\n    this.registrarPasajero = () => {\n      if (this.state.nombrePasajero.trim() === '') {\n        alert('Por favor ingrese un nombre válido');\n        return;\n      }\n      const nuevoPasajero = {\n        id: this.state.pasajeros.length + 1,\n        nombre: this.state.nombrePasajero\n      };\n      this.setState({\n        pasajeros: [...this.state.pasajeros, nuevoPasajero],\n        nombrePasajero: ''\n      });\n    };\n    this.handleChange = event => {\n      this.setState({\n        direccion: event.target.value\n      });\n    };\n    this.solicitarViaje = () => {\n      // Simulamos una lista de conductores disponibles\n      //const conductores = ['Juan', 'Pedro', 'María'];\n\n      // Actualizamos el estado con los conductores disponibles y el primer conductor seleccionado\n      this.setState({\n        conductoresDisponibles: conductores,\n        conductorSeleccionado: conductores[0]\n      });\n    };\n    this.state = {\n      pasajeros: [],\n      nombrePasajero: '',\n      direccion: '',\n      conductoresDisponibles: [],\n      conductorSeleccionado: null\n    };\n  }\n  render() {\n    const {\n      pasajeros,\n      nombrePasajero,\n      direccion,\n      conductoresDisponibles,\n      conductorSeleccionado\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pasajeros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nombre del pasajero...\",\n          value: nombrePasajero,\n          onChange: event => this.setState({\n            nombrePasajero: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.registrarPasajero,\n          children: \"Registrar pasajero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pasajeros.map(pasajero => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: pasajero.nombre\n        }, pasajero.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Direcci\\xF3n del viaje...\",\n          value: direccion,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.solicitarViaje,\n          children: \"Solicitar viaje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), conductoresDisponibles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Conductores disponibles:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: conductorSeleccionado,\n          onChange: event => this.setState({\n            conductorSeleccionado: event.target.value\n          }),\n          children: conductoresDisponibles.map(conductor => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: conductor\n          }, conductor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Pasajeros;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Pasajeros","constructor","props","registrarPasajero","state","nombrePasajero","trim","alert","nuevoPasajero","id","pasajeros","length","nombre","setState","handleChange","event","direccion","target","value","solicitarViaje","conductoresDisponibles","conductores","conductorSeleccionado","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","pasajero","conductor"],"sources":["/Users/jhonb/Documents/Reacjs/digiworld-1/src/components/pasajeros/Pasajeros.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Pasajeros extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pasajeros: [],\n      nombrePasajero: '',\n      direccion: '',\n      conductoresDisponibles: [],\n      conductorSeleccionado: null,\n    };\n  }\n\n  registrarPasajero = () => {\n    if (this.state.nombrePasajero.trim() === '') {\n      alert('Por favor ingrese un nombre válido');\n      return;\n    }\n\n    const nuevoPasajero = {\n      id: this.state.pasajeros.length + 1,\n      nombre: this.state.nombrePasajero,\n    };\n    this.setState({ pasajeros: [...this.state.pasajeros, nuevoPasajero], nombrePasajero: '' });\n  };\n\n  handleChange = (event) => {\n    this.setState({ direccion: event.target.value });\n  };\n\n  solicitarViaje = () => {\n    // Simulamos una lista de conductores disponibles\n    //const conductores = ['Juan', 'Pedro', 'María'];\n\n    // Actualizamos el estado con los conductores disponibles y el primer conductor seleccionado\n    this.setState({ conductoresDisponibles: conductores, conductorSeleccionado: conductores[0] });\n  };\n\n  render() {\n    const { pasajeros, nombrePasajero, direccion, conductoresDisponibles, conductorSeleccionado } = this.state;\n\n    return (\n      <div className='contenedor'>\n        <h1>Pasajeros</h1>\n        <div>\n          {/* Input para ingresar el nombre del nuevo pasajero */}\n          <input type=\"text\" placeholder=\"Nombre del pasajero...\" value={nombrePasajero} onChange={(event) => this.setState({ nombrePasajero: event.target.value })} />\n          {/* Botón para registrar un nuevo pasajero */}\n          <button onClick={this.registrarPasajero}>Registrar pasajero</button>\n        </div>\n        {/* Mostrar la lista de pasajeros existentes */}\n        <ul>\n          {pasajeros.map((pasajero) => (\n            <li key={pasajero.id}>{pasajero.nombre}</li>\n          ))}\n        </ul>\n        <div>\n          {/* Input para ingresar la dirección del nuevo viaje */}\n          <input type=\"text\" placeholder=\"Dirección del viaje...\" value={direccion} onChange={this.handleChange} />\n          {/* Botón para solicitar un nuevo viaje */}\n          <button onClick={this.solicitarViaje}>Solicitar viaje</button>\n        </div>\n        {/* Mostrar la lista de conductores disponibles */}\n        {conductoresDisponibles.length > 0 && (\n          <div>\n            <label>Conductores disponibles:</label>\n            <select value={conductorSeleccionado} onChange={(event) => this.setState({ conductorSeleccionado: event.target.value })}>\n              {conductoresDisponibles.map((conductor) => (\n                <option key={conductor}>{conductor}</option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Pasajeros;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,SAASH,SAAS,CAAC;EAChCI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAUfC,iBAAiB,GAAG,MAAM;MACxB,IAAI,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3CC,KAAK,CAAC,oCAAoC,CAAC;QAC3C;MACF;MAEA,MAAMC,aAAa,GAAG;QACpBC,EAAE,EAAE,IAAI,CAACL,KAAK,CAACM,SAAS,CAACC,MAAM,GAAG,CAAC;QACnCC,MAAM,EAAE,IAAI,CAACR,KAAK,CAACC;MACrB,CAAC;MACD,IAAI,CAACQ,QAAQ,CAAC;QAAEH,SAAS,EAAE,CAAC,GAAG,IAAI,CAACN,KAAK,CAACM,SAAS,EAAEF,aAAa,CAAC;QAAEH,cAAc,EAAE;MAAG,CAAC,CAAC;IAC5F,CAAC;IAAA,KAEDS,YAAY,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACF,QAAQ,CAAC;QAAEG,SAAS,EAAED,KAAK,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAClD,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrB;MACA;;MAEA;MACA,IAAI,CAACN,QAAQ,CAAC;QAAEO,sBAAsB,EAAEC,WAAW;QAAEC,qBAAqB,EAAED,WAAW,CAAC,CAAC;MAAE,CAAC,CAAC;IAC/F,CAAC;IAhCC,IAAI,CAACjB,KAAK,GAAG;MACXM,SAAS,EAAE,EAAE;MACbL,cAAc,EAAE,EAAE;MAClBW,SAAS,EAAE,EAAE;MACbI,sBAAsB,EAAE,EAAE;MAC1BE,qBAAqB,EAAE;IACzB,CAAC;EACH;EA2BAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEb,SAAS;MAAEL,cAAc;MAAEW,SAAS;MAAEI,sBAAsB;MAAEE;IAAsB,CAAC,GAAG,IAAI,CAAClB,KAAK;IAE1G,oBACEL,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB1B,OAAA;QAAA0B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClB9B,OAAA;QAAA0B,QAAA,gBAEE1B,OAAA;UAAO+B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,wBAAwB;UAACb,KAAK,EAAEb,cAAe;UAAC2B,QAAQ,EAAGjB,KAAK,IAAK,IAAI,CAACF,QAAQ,CAAC;YAAER,cAAc,EAAEU,KAAK,CAACE,MAAM,CAACC;UAAM,CAAC;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAE7J9B,OAAA;UAAQkC,OAAO,EAAE,IAAI,CAAC9B,iBAAkB;UAAAsB,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChE,eAEN9B,OAAA;QAAA0B,QAAA,EACGf,SAAS,CAACwB,GAAG,CAAEC,QAAQ,iBACtBpC,OAAA;UAAA0B,QAAA,EAAuBU,QAAQ,CAACvB;QAAM,GAA7BuB,QAAQ,CAAC1B,EAAE;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACL9B,OAAA;QAAA0B,QAAA,gBAEE1B,OAAA;UAAO+B,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,2BAAwB;UAACb,KAAK,EAAEF,SAAU;UAACgB,QAAQ,EAAE,IAAI,CAAClB;QAAa;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAEzG9B,OAAA;UAAQkC,OAAO,EAAE,IAAI,CAACd,cAAe;UAAAM,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1D,EAELT,sBAAsB,CAACT,MAAM,GAAG,CAAC,iBAChCZ,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAO;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACvC9B,OAAA;UAAQmB,KAAK,EAAEI,qBAAsB;UAACU,QAAQ,EAAGjB,KAAK,IAAK,IAAI,CAACF,QAAQ,CAAC;YAAES,qBAAqB,EAAEP,KAAK,CAACE,MAAM,CAACC;UAAM,CAAC,CAAE;UAAAO,QAAA,EACrHL,sBAAsB,CAACc,GAAG,CAAEE,SAAS,iBACpCrC,OAAA;YAAA0B,QAAA,EAAyBW;UAAS,GAArBA,SAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAEV;AACF;AAEA,eAAe7B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}